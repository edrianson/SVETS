/*
Deployment script for SVETSDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar LoadTestData "true"
:setvar DatabaseName "SVETSDB"
:setvar DefaultFilePrefix "SVETSDB"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[Owner]...';


GO
CREATE TABLE [dbo].[Owner] (
    [OwnerId]   INT  NOT NULL,
    [SurName]   TEXT NOT NULL,
    [GivenName] TEXT NOT NULL,
    [Phone]     TEXT NOT NULL,
    PRIMARY KEY CLUSTERED ([OwnerId] ASC)
);


GO
PRINT N'Creating [dbo].[Pet]...';


GO
CREATE TABLE [dbo].[Pet] (
    [PetName] NCHAR (6) NOT NULL,
    [Type]    TEXT      NOT NULL,
    [OwnerId] INT       NOT NULL,
    PRIMARY KEY CLUSTERED ([PetName] ASC, [OwnerId] ASC)
);


GO
PRINT N'Creating [dbo].[Procedure]...';


GO
CREATE TABLE [dbo].[Procedure] (
    [ProcedureId] INT   NOT NULL,
    [Description] TEXT  NOT NULL,
    [Price]       MONEY NOT NULL,
    PRIMARY KEY CLUSTERED ([ProcedureId] ASC)
);


GO
PRINT N'Creating [dbo].[Treatment]...';


GO
CREATE TABLE [dbo].[Treatment] (
    [PetName]     NCHAR (6) NOT NULL,
    [OwnerId]     INT       NOT NULL,
    [ProcedureId] INT       NOT NULL,
    [Date]        DATETIME  NOT NULL,
    [Notes]       TEXT      NOT NULL,
    PRIMARY KEY CLUSTERED ([PetName] ASC, [OwnerId] ASC, [Date] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Pet]...';


GO
ALTER TABLE [dbo].[Pet] WITH NOCHECK
    ADD FOREIGN KEY ([OwnerId]) REFERENCES [dbo].[Owner] ([OwnerId]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Treatment]...';


GO
ALTER TABLE [dbo].[Treatment] WITH NOCHECK
    ADD FOREIGN KEY ([PetName], [OwnerId]) REFERENCES [dbo].[Pet] ([PetName], [OwnerId]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Treatment]...';


GO
ALTER TABLE [dbo].[Treatment] WITH NOCHECK
    ADD FOREIGN KEY ([ProcedureId]) REFERENCES [dbo].[Procedure] ([ProcedureId]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF '$(LoadTestData)' = 'true' BEGIN
	INSERT INTO [Owner]([OwnerId], [SurName], [GivenName], [Phone]) VALUES
		(1, 'Sinatra', 'Frank', '400111222'),
		(2, 'Ellington', 'Duke', '400222333'),
		(3, 'Fitzgerald', 'Ella', '400333444');

	INSERT INTO [Pet]([PetName], [Type], [OwnerId]) VALUES
		('Buster', 'Dog', 1),
		('Fluffy', 'Cat', 1),
		('Stew', 'Rabbit', 2),
		('Buster', 'Dog', 3),
		('Pooper', 'Dog', 3);

	INSERT INTO [Procedure]([ProcedureId], [Description], [Price]) VALUES
		(1, 'Rabies Vaccination', 24),
		(10, 'Examine and Treat Wound', 30),
		(5, 'Heart Worm Test', 25),
		(8, 'Tetnus Vaccination', 17);

	INSERT INTO [Treatment]([PetName], [OwnerId], [ProcedureId], [Date], [Notes]) VALUES
		('Buster', 1, 1, 20-6-17, 'Routine Vaccination'),
		('Buster', 1, 1, 15-5-18, 'Booster Shot'),
		('Fluffy', 1, 10, 10-5-18, 'Wounds sustained in apparent cat fight.'),
		('Stew', 2, 10, 10-5-18, 'Wounds sustained during attemot to cook the stew.'),
		('Pooper', 3, 5, 18-5-18, 'Routine Test');
END;
GO

GO
